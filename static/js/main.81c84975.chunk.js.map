{"version":3,"sources":["helpers/formatPerformances.js","components/Title/Title.js","containers/HomePage/Steps/Performances.js","components/InputBox/InputBox.js","components/SelectBox/SelectBox.js","components/Checkbox/Checkbox.js","components/Button/Button.js","containers/HomePage/reducer.js","containers/HomePage/Steps/PersonalData.js","containers/HomePage/Steps/Payment.js","containers/HomePage/Steps/Finish.js","components/StepBar/StepBar.js","components/Spinner/Spinner.js","containers/HomePage/HomePage.js","components/Header/Header.js","containers/App/App.js","serviceWorker.js","index.js","components/Spinner/spin.svg"],"names":["formatPerformances","performances","sessions","existingDays","map","perf","sessionsArray","filter","session","id","relationships","performance","data","filteredSession","attributes","days","i","length","formattedDay","moment","from","format","includes","currentDay","push","times","day","to","Title","children","size","Performances","onChangeStep","className","elem","idx","key","title","genres","genre","onClick","time","registerLocale","ru","InputBox","label","name","value","placeholder","type","required","handleChange","selected","showYearDropdown","placeholderText","locale","dateFormat","onChange","date","e","preventDefault","target","SelectBox","options","text","Checkbox","checked","defaultChecked","Button","htmltype","disabled","handleClick","formReducer","state","action","rules","PersonalData","initialState","firstName","localStorage","getItem","lastName","birthDate","Date","email","payment","useReducer","formData","dispatch","isDisabled","onSubmit","newStep","setItem","a","Payment","number","expired","owner","Finish","clear","StepBar","currentStep","renderTitle","Spinner","src","spin","alt","HomePage","useState","step","setStep","setData","setPerformances","isLoading","setIsLoading","useEffect","sessionsPromise","axios","get","performancesPromise","Promise","all","responces","console","error","fetchData","onSendForm","createPayment","card","valid_thru","post","first_name","last_name","birthday","renderStep","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.81c84975.chunk.js","sourcesContent":["import moment from \"moment\";\n\nconst formatPerformances = (performances, sessions) => {\n  const existingDays = [];\n  return performances.map(perf => {\n    const sessionsArray = sessions\n      .filter(session => perf.id === session.relationships.performance.data.id)\n      .map(filteredSession => filteredSession.attributes);\n      \n    const days = [];\n    for (let i = 0; i < sessionsArray.length; i++) {\n      const formattedDay = moment(sessionsArray[i].from).format(\"YYYY-MM-DD\")\n      if (!existingDays.includes(formattedDay)) {\n        const currentDay = formattedDay;\n        existingDays.push(formattedDay);\n\n        const times = sessionsArray\n          .filter(\n            session => moment(session.from).format(\"YYYY-MM-DD\") === currentDay\n          )\n          .map(day => ({\n            from: moment(day.from).format(\"HH:mm\"),\n            to: moment(day.to).format(\"HH:mm\")\n          }));\n\n          days.push({\n            day: currentDay,\n            times\n          })\n      }\n    }\n\n    return { ...perf, sessions: days };\n  });\n};\n\nexport default formatPerformances;\n","import React from \"react\";\nimport \"./styles.css\";\n\nconst Title = ({ children, size }) => {\n  switch(size) {\n    case \"h2\":\n      return <h2>{children}</h2>\n    case \"h3\":\n      return <h3>{children}</h3>\n    case \"h4\":\n      return <h4>{children}</h4>\n    case \"h5\":\n      return <h5>{children}</h5>\n    default:\n      return <h1>{children}</h1>\n  }\n}\n\nexport default Title;\n","import React from \"react\";\nimport moment from \"moment\";\nimport Title from \"../../../components/Title\";\nimport \"../styles.css\";\n\nconst Performances = ({ data, onChangeStep }) => {\n  return (\n    <div className=\"performances\">\n      {data.map((elem, idx) => (\n        <div key={idx} className=\"performance box\">\n          <Title size=\"h2\">{elem.attributes.title}</Title>\n          <div className=\"genres\">\n            {elem.attributes.genres.map(genre => (\n              <span className=\"genre\" key={genre}>\n                {genre}\n              </span>\n            ))}\n          </div>\n          <div className=\"sessions\">\n            {elem.sessions.map(day => (\n              <div key={day.day}>\n                <Title size=\"h4\">{moment(day.day).format(\"DD.MM.YYYY\")}</Title>\n                <div className=\"times\" onClick={() => onChangeStep(2)}>\n                  {day.times.map(time => (\n                    <div className=\"session\" key={time.from}>\n                      <div className=\"time\">{time.from}</div>\n                      <span>-</span>\n                      <div className=\"time\">{time.to}</div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Performances;\n","import React from \"react\";\nimport DatePicker, { registerLocale } from \"react-datepicker\";\nimport ru from \"date-fns/locale/ru\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./styles.css\";\nregisterLocale(\"ru\", ru);\n\nconst InputBox = ({ label, name, value, placeholder, type, required, handleChange }) => {\n  switch (type) {\n    case \"calendar\":\n      return (\n        <label className=\"input-box\">\n          <div className=\"label\">{label}</div>\n          <DatePicker\n            name={name}\n            selected={value}\n            showYearDropdown\n            placeholderText={placeholder}\n            locale=\"ru\"\n            dateFormat=\"yyyy-MM-dd\"\n            className=\"input\"\n            onChange={(date, e) => {\n              e.preventDefault();\n              handleChange(name, date);\n            }}\n          />\n        </label>\n      );\n    default:\n      return (\n        <label className=\"input-box\">\n          <div className=\"label\">{label}</div>\n          <input\n            name={name}\n            required={required}\n            value={value}\n            type={type || \"text\"}\n            placeholder={placeholder}\n            onChange={({ target: { value } }) => handleChange(name, value)}\n            className=\"input\"\n          />\n        </label>\n      );\n  }\n};\n\nexport default InputBox;\n","import React from \"react\";\nimport \"./styles.css\";\n\nconst SelectBox = ({ name, label, options, value, handleChange }) => {\n  return (\n    <label className=\"select-box\">\n      <div className=\"label\">{label}</div>\n      <select onChange={({ target: { value } }) => { handleChange(name, value) }} value={value}>\n        {options.map(elem => <option key={elem.value} value={elem.value}>{elem.text}</option>)}\n      </select>\n    </label>\n  );\n};\n\nexport default SelectBox;\n","import React from \"react\";\nimport \"./styles.css\";\n\nconst Checkbox = ({ children, name, checked, handleChange }) => {\n  return (\n    <label className=\"checkbox\">\n      <input type=\"checkbox\" name={name} defaultChecked={checked} onChange={() => handleChange(name)} />\n      <div className=\"checkbox-text\">{children}</div>\n    </label>\n  );\n}\n\nexport default Checkbox;\n","import React from \"react\";\nimport \"./styles.css\";\n\nconst Button = ({ children, type, htmltype, disabled, handleClick = () => {} }) => {\n  return <button disabled={disabled} className={`button ${type}`} htmltype={htmltype} onClick={() => handleClick()}>{children}</button>\n}\n\nexport default Button;\n","const formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      return {\n        ...state,\n        [action.name]: action.value,\n      };\n    case \"TOGGLE_RULES\":\n      return {\n        ...state,\n        rules: !state.rules,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default formReducer;","import React, { useReducer } from \"react\";\nimport InputBox from \"../../../components/InputBox\";\nimport SelectBox from \"../../../components/SelectBox\";\nimport Checkbox from \"../../../components/Checkbox\";\nimport Button from \"../../../components/Button\";\nimport formReducer from \"../reducer.js\";\nimport \"../styles.css\";\n\nconst PersonalData = ({ onChangeStep }) => {\n  const initialState = {\n    firstName: localStorage.getItem(\"firstName\") || \"\",\n    lastName: localStorage.getItem(\"lastName\") || \"\",\n    birthDate: localStorage.getItem(\"birthDate\")\n      ? new Date(localStorage.getItem(\"birthDate\"))\n      : \"\",\n    email: localStorage.getItem(\"email\") || \"\",\n    payment: localStorage.getItem(\"payment\") || \"cash\",\n    rules: localStorage.getItem(\"lastName\") || false\n  };\n  const [formData, dispatch] = useReducer(formReducer, initialState);\n\n  const isDisabled =\n    formData.firstName &&\n    formData.lastName &&\n    formData.birthDate &&\n    formData.email &&\n    formData.payment &&\n    formData.rules;\n\n  return (\n    <div className=\"box personal-box\">\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          const newStep = formData.payment === \"cash\" ? 4 : 3;\n          onChangeStep(newStep, formData);\n        }}\n      >\n        <InputBox\n          name=\"firstName\"\n          label=\"Ваше имя\"\n          placeholder=\"Иван\"\n          value={formData.firstName}\n          required\n          handleChange={(name, value) => {\n            dispatch({ type: \"INPUT_CHANGE\", name, value });\n            localStorage.setItem(name, value);\n          }}\n        />\n        <InputBox\n          name=\"lastName\"\n          label=\"Ваша фамилия\"\n          placeholder=\"Иванов\"\n          value={formData.lastName}\n          required\n          handleChange={(name, value) => {\n            dispatch({ type: \"INPUT_CHANGE\", name, value });\n            localStorage.setItem(name, value);\n          }}\n        />\n        <InputBox\n          type=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          placeholder=\"ivan@ivanov@mail.ru\"\n          value={formData.email}\n          required\n          handleChange={(name, value) => {\n            dispatch({ type: \"INPUT_CHANGE\", name, value });\n            localStorage.setItem(name, value);\n          }}\n        />\n        <InputBox\n          type=\"calendar\"\n          name=\"birthDate\"\n          value={formData.birthDate}\n          label=\"Дата рождения\"\n          placeholder=\"1990-10-31\"\n          handleChange={(name, value) => {\n            dispatch({ type: \"INPUT_CHANGE\", name, value });\n            localStorage.setItem(name, value);\n          }}\n        />\n        <SelectBox\n          name=\"payment\"\n          label=\"Выберите способ оплаты\"\n          value={formData.payment}\n          options={[\n            { text: \"Оплата наличными\", value: \"cash\" },\n            { text: \"Оплата картой\", value: \"card\" }\n          ]}\n          handleChange={(name, value) => {\n            dispatch({ type: \"INPUT_CHANGE\", name, value });\n            localStorage.setItem(name, value);\n          }}\n        />\n        <Checkbox\n          name=\"rules\"\n          checked={formData.rules}\n          handleChange={async name => {\n            await dispatch({ type: \"TOGGLE_RULES\" });\n            localStorage.setItem(\"rules\", !formData.rules);\n          }}\n        >\n          Согласен с правилами\n        </Checkbox>\n        <div className=\"buttons\">\n          <Button handleClick={() => onChangeStep(1, formData)}>Назад</Button>\n          <Button\n            type=\"primary\"\n            htmltype=\"submit\"\n            disabled={!isDisabled}\n            // handleClick={() => onChangeStep(3, formData)}\n          >\n            Вперед\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PersonalData;\n","import React, { useReducer } from \"react\";\nimport InputBox from \"../../../components/InputBox\";\nimport Button from \"../../../components/Button\";\nimport formReducer from \"../reducer.js\";\nimport \"../styles.css\";\n\nconst Payment = ({ onChangeStep }) => {\n  const initialState = {\n    number: localStorage.getItem(\"number\") || \"\",\n    expired: localStorage.getItem(\"expired\") || \"\",\n    owner: localStorage.getItem(\"owner\") || \"\"\n  };\n  const [formData, dispatch] = useReducer(formReducer, initialState);\n\n  const isDisabled = formData.number && formData.expired && formData.owner;\n\n  return (\n    <div className=\"box personal-box\">\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          onChangeStep(4, formData);\n        }}\n      >\n        <InputBox\n          name=\"number\"\n          label=\"Номер карты\"\n          placeholder=\"1234123412341234\"\n          type=\"number\"\n          value={formData.number}\n          required\n          handleChange={(name, value) => {\n            dispatch({ type: \"INPUT_CHANGE\", name, value });\n            localStorage.setItem(name, value);\n          }}\n        />\n        <InputBox\n          name=\"expired\"\n          label=\"Срок действия карты\"\n          placeholder=\"08/22\"\n          value={formData.expired}\n          required\n          handleChange={(name, value) => {\n            dispatch({ type: \"INPUT_CHANGE\", name, value });\n            localStorage.setItem(name, value);\n          }}\n        />\n        <InputBox\n          name=\"owner\"\n          label=\"Владелец карты\"\n          placeholder=\"IVAN IVANOV\"\n          value={formData.owner}\n          required\n          handleChange={(name, value) => {\n            dispatch({ type: \"INPUT_CHANGE\", name, value });\n            localStorage.setItem(name, value);\n          }}\n        />\n        <div className=\"buttons\">\n          <Button handleClick={() => onChangeStep(2)}>Назад</Button>\n          <Button\n            type=\"primary\"\n            disabled={!isDisabled}\n            // handleClick={() => onChangeStep(4)}\n          >\n            Готово\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Payment;\n","import React from \"react\";\n\nconst Finish = () => {\n  localStorage.clear();\n  return (\n    <div className=\"box personal-box finish\">\n      Спасибо! Приятного просмотра\n    </div>\n  )\n}\n\nexport default Finish;\n","import React from \"react\";\nimport Title from \"../Title\"\nimport \"./styles.css\";\n\nconst StepBar = ({ currentStep }) => {\n  const renderTitle = () => {\n    switch(currentStep) {\n      case 2:\n        return <Title>2. Заполните личные данные</Title>\n      case 3:\n        return <Title>3. Оплата картой</Title>\n      case 4:\n        return <Title>Готово!</Title>\n      default:\n        return <Title>1. Выберите спектакль и время</Title>\n    }\n  }\n  return (\n    <div className=\"title-box\">\n      <div>\n        {renderTitle()}\n      </div>\n    </div>\n  )\n}\n\nexport default StepBar;\n","import React from \"react\";\nimport spin from \"./spin.svg\";\nimport \"./styles.css\";\n\nconst Spinner = () => (\n  <div className=\"spin\">\n    <img src={spin} alt=\"Загрузка\"/>\n  </div>\n);\n\nexport default Spinner;","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { formatPerformances } from \"../../helpers\";\nimport Performances from \"./Steps/Performances\";\nimport PersonalData from \"./Steps/PersonalData\";\nimport Payment from \"./Steps/Payment\";\nimport Finish from \"./Steps/Finish\";\nimport StepBar from \"../../components/StepBar\";\nimport Spinner from \"../../components/Spinner\";\nimport \"./styles.css\";\n\nconst HomePage = () => {\n  const [step, setStep] = useState(+localStorage.getItem(\"step\"));\n  const [data, setData] = useState({});\n  const [performances, setPerformances] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const sessionsPromise = axios.get(\n        \"http://www.amock.io/api/Darren_Clyd/sessions\"\n      );\n      const performancesPromise = axios.get(\n        \"http://www.amock.io/api/Darren_Clyd/performances\"\n      );\n\n      try {\n        const responces = await Promise.all([\n          performancesPromise,\n          sessionsPromise\n        ]);\n        setPerformances(\n          formatPerformances(responces[0].data.data, responces[1].data.data)\n        );\n        setIsLoading(false);\n      } catch (error) {\n        console.error(error);\n        throw error;\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const onChangeStep = async (newStep, formData) => {\n    await localStorage.setItem(\"step\", newStep);\n    setStep(newStep);\n    if (formData) {\n      await setData({ ...data, ...formData });\n      if (formData.payment === \"cash\" || newStep === 4) {\n        onSendForm();\n      }\n    }\n  };\n\n  const onSendForm = async () => {\n    const createPayment = () => {\n      if (data.payment === \"card\") {\n        return {\n          type: \"card\",\n          card: {\n            number: data.number,\n            valid_thru: data.expired,\n            name: data.owner\n          }\n        };\n      } else {\n        return { type: \"cash\" }\n      }\n    };\n\n    axios.post(\"\", {\n      data: {\n        type: \"orders\",\n        attributes: {\n          session: 1,\n          first_name: data.firstName,\n          last_name: data.lastName,\n          birthday: data.birthDate,\n          email: data.email,\n          payment: createPayment(),\n        }\n      }\n    });\n  };\n\n  const renderStep = () => {\n    switch (step) {\n      case 1:\n        return (\n          <Performances\n            data={performances}\n            onChangeStep={newStep => onChangeStep(newStep)}\n          />\n        );\n      case 2:\n        return (\n          <PersonalData\n            onChangeStep={(newStep, formData) =>\n              onChangeStep(newStep, formData)\n            }\n          />\n        );\n      case 3:\n        return (\n          <Payment\n            onChangeStep={(newStep, formData) =>\n              onChangeStep(newStep, formData)\n            }\n          />\n        );\n      case 4:\n        return <Finish />;\n      default:\n        return (\n          <Performances\n            data={performances}\n            onChangeStep={newStep => onChangeStep(newStep)}\n          />\n        );\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <StepBar currentStep={step} />\n      {isLoading ? <Spinner /> : renderStep()}\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport \"./styles.css\";\n\nconst Header = ({ children }) => <header className=\"header\">{children}</header>\n\nexport default Header;\n","import React from \"react\";\nimport HomePage from \"../HomePage\";\nimport Header from \"../../components/Header\";\n\nfunction App() {\n  return (\n    <div>\n      <Header>Театр</Header>\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/spin.24b07114.svg\";"],"sourceRoot":""}